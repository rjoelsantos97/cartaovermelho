/**
 * Script para corrigir slugs que terminam com h√≠fen
 */

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

async function fixSlugsWithTrailingHyphens() {
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.SUPABASE_SERVICE_KEY
  );

  console.log('üîß Corrigindo slugs com h√≠fenes no final...');

  // Buscar slugs que terminam com h√≠fen
  const { data: articles, error } = await supabase
    .from('processed_articles')
    .select('id, title, slug')
    .eq('is_published', true)
    .not('slug', 'is', null)
    .like('slug', '%-');

  if (error) {
    console.error('‚ùå Erro ao buscar artigos:', error);
    return;
  }

  if (!articles || articles.length === 0) {
    console.log('‚úÖ Nenhum slug com h√≠fen no final encontrado!');
    return;
  }

  console.log(`üìù Encontrados ${articles.length} slugs para corrigir:`);

  let fixed = 0;
  let failed = 0;

  for (const article of articles) {
    try {
      // Remover h√≠fen do final
      const cleanSlug = article.slug.replace(/-+$/, '');
      
      console.log(`üîÑ ${article.slug} ‚Üí ${cleanSlug}`);

      // Verificar se o slug limpo j√° existe
      const { data: existing } = await supabase
        .from('processed_articles')
        .select('id')
        .eq('slug', cleanSlug)
        .neq('id', article.id)
        .single();

      if (existing) {
        console.log(`‚ö†Ô∏è  Slug ${cleanSlug} j√° existe, pulando...`);
        continue;
      }

      // Atualizar slug
      const { error: updateError } = await supabase
        .from('processed_articles')
        .update({ slug: cleanSlug })
        .eq('id', article.id);

      if (updateError) {
        console.error(`‚ùå Erro ao atualizar ${article.id}:`, updateError);
        failed++;
      } else {
        console.log(`‚úÖ Corrigido: ${cleanSlug}`);
        fixed++;
      }
    } catch (error) {
      console.error(`‚ùå Erro ao processar ${article.id}:`, error);
      failed++;
    }
  }

  console.log('\nüìä RESUMO:');
  console.log(`‚úÖ Corrigidos: ${fixed}`);
  console.log(`‚ùå Falhas: ${failed}`);
  console.log(`üìà Total: ${fixed + failed}`);
}

fixSlugsWithTrailingHyphens().catch(console.error);